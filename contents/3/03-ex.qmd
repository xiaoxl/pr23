
## Exercises

Many exercises are from @Pra2018.

::: {#exr-}
## array
Write a NumPy program to create a $3\times3$ matrix with values ranging from 2 to 10.
:::


::: {#exr-}
## array
Write a NumPy program to create a null vector of size 10 and update sixth value to 11.
:::



::: {#exr-}
## array
Write a NumPy program to reverse an array (first element becomes last).
:::


::: {#exr-}
## array
Write a NumPy program to create a $10\times10$ 2D-array with 1 on the border and 0 inside.
:::


::: {#exr-}
## repeat and tile
Given `a = np.array([1,2,3])`, please get the desired output `array([1, 1, 1, 2, 2, 2, 3, 3, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3])`.
:::


::: {#exr-}
## Compare two `numpy` arraies
Consider two `numpy` arraies `x` and `y`. Compare them entry by entry. We would like to know how many are the same.
:::

<details>
<summary>Click to expand.</summary>

::: {.solution}
Note that `bool` values `True` and `False` can be treated as numbers `1` and `0`. 

```{python}
import numpy as np

x = np.array([1, 2, 3, 4, 5])
y = np.array([2, 1, 4, 4, 5])

numofsame = np.sum(x == y)
print(numofsame)
```
:::
</details>



::: {#exr-}
Get all items between `5` and `10` from an array `a = np.array([2, 6, 1, 9, 10, 3, 27])`.
:::


::: {#exr-}
Swap rows `1` and `2` in the array `arr = np.arange(9).reshape(3,3)`.
:::


::: {#exr-}
Please finish the following tasks.

1. Reverse the rows of a 2D array `arr = np.arange(9).reshape(3,3)`.
2. Reverse the columns of a 2D array `arr = np.arange(9).reshape(3,3)`.
:::


::: {#exr-}
Create a 2D array of shape `5x3` to contain random decimal numbers between `5` and `10`.
:::


::: {#exr-}
Use the following code to get the dataset `iris`. 

```{python}
import numpy as np

url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
iris_1d = np.genfromtxt(url, delimiter=',', dtype=None, encoding=None)
```

1. `iris_1d` is a 1D numpy array that each item is a tuple. Please construct a new 1D numpy array that each item is the last componenet of each tuple in `iris_1d`.

2. Convert `iris_1d` into a 2D array `iris_2d` by omitting the last field of each item.

:::



::: {#exr-}
## Normalization

Use the following code to get an 1D array `sepallength`.
```{python}
import numpy as np

url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
sepallength = np.genfromtxt(url, delimiter=',', dtype='float', usecols=[0],
                            encoding=None)
```
Please normalize it such that the values of each item is between `0` and `1`.

:::



::: {#exr-}
`np.isnan()` is a function to check whether each entry of a numpy array is `nan` or not. Please use this as well as `np.where` to find all `nan` entries in an array. 

You may use the following array `iris_2d` to test your code.

```{python}
import numpy as np
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
iris_2d = np.genfromtxt(url, delimiter=',', dtype='float', encoding=None)
iris_2d[np.random.randint(150, size=20), np.random.randint(4, size=20)] = np.nan
```
:::



::: {#exr-}
Select the rows of `iris_2d` that does not have any nan value.

```{python}
import numpy as np
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
iris_2d = np.genfromtxt(url, delimiter=',', dtype='float', usecols=[0,1,2,3],
                        encoding=None)
iris_2d[np.random.randint(150, size=20), np.random.randint(4, size=20)] = np.nan
```

:::


::: {#exr-}
Replace all `nan` with `0` in numpy array `iris_2d`.

```{python}
import numpy as np
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
iris_2d = np.genfromtxt(url, delimiter=',', dtype='float', usecols=[0,1,2,3],
                        encoding=None)
iris_2d[np.random.randint(150, size=20), np.random.randint(4, size=20)] = np.nan
```

:::



::: {#exr-}
Consider `x = np.array([1, 2, 1, 1, 3, 4, 3, 1, 1, 2, 1, 1, 2])`. Please find the index of 5th repetition of number `1` in `x`.
:::